{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\buhil\\\\WebstormProjects\\\\anastasiaLab\\\\frontend\\\\src\\\\components\\\\MapComponent.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = ({\n  points,\n  initialCenter,\n  zoom = 6\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markersRef = useRef([]);\n  const [mapLoaded, setMapLoaded] = useState(false);\n\n  // Перевірка чи завантажена бібліотека Leaflet\n  useEffect(() => {\n    const checkLeaflet = () => {\n      if (window.L) {\n        setMapLoaded(true);\n      } else {\n        setTimeout(checkLeaflet, 100);\n      }\n    };\n    checkLeaflet();\n    return () => {\n      // Очищення мапи при розмонтуванні компонента\n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.remove();\n        mapInstanceRef.current = null;\n      }\n    };\n  }, []);\n\n  // Ініціалізація мапи після завантаження Leaflet\n  useEffect(() => {\n    if (!mapLoaded || !mapRef.current || mapInstanceRef.current) return;\n    try {\n      const L = window.L;\n\n      // Створюємо мапу\n      mapInstanceRef.current = L.map(mapRef.current).setView([initialCenter.lat, initialCenter.lng], zoom);\n\n      // Додаємо тайли OpenStreetMap\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(mapInstanceRef.current);\n\n      // Додаємо початковий маркер для центру\n      const marker = L.marker([initialCenter.lat, initialCenter.lng]).addTo(mapInstanceRef.current).bindPopup(\"Центр карти\").openPopup();\n      markersRef.current.push(marker);\n    } catch (error) {\n      console.error('Помилка при ініціалізації карти:', error);\n    }\n  }, [mapLoaded, initialCenter, zoom]);\n\n  // Оновлення маркерів на карті коли змінюються точки\n  useEffect(() => {\n    if (!mapLoaded || !mapInstanceRef.current || !points || points.length === 0) return;\n    const L = window.L;\n    try {\n      // Видаляємо всі попередні маркери\n      if (markersRef.current.length > 0) {\n        markersRef.current.forEach(marker => {\n          mapInstanceRef.current.removeLayer(marker);\n        });\n        markersRef.current = [];\n      }\n\n      // Додаємо нові маркери\n      const waypoints = [];\n      points.forEach((point, index) => {\n        const marker = L.marker([point.lat, point.lng]).addTo(mapInstanceRef.current).bindPopup(`${index + 1}. ${point.name || 'Точка'}`);\n        markersRef.current.push(marker);\n        waypoints.push(L.latLng(point.lat, point.lng));\n        if (index === 0) {\n          marker.openPopup();\n        }\n      });\n\n      // Якщо є більше одного маркера, створюємо маршрут між ними\n      if (waypoints.length > 1 && window.L.Routing) {\n        const routeControl = L.Routing.control({\n          waypoints: waypoints,\n          routeWhileDragging: false,\n          lineOptions: {\n            styles: [{\n              color: '#223440',\n              opacity: 0.7,\n              weight: 5\n            }]\n          },\n          createMarker: () => null,\n          // Не створюємо додаткові маркери\n          addWaypoints: false,\n          draggableWaypoints: false,\n          fitSelectedRoutes: false\n        }).addTo(mapInstanceRef.current);\n      }\n\n      // Визначаємо межі для автоматичного масштабування\n      const bounds = L.latLngBounds(waypoints);\n      mapInstanceRef.current.fitBounds(bounds, {\n        padding: [50, 50]\n      });\n    } catch (error) {\n      console.error('Помилка при оновленні маркерів:', error);\n    }\n  }, [points, mapLoaded]);\n  if (!mapLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-loading\",\n      children: \"\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F \\u043A\\u0430\\u0440\\u0442\\u0438...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    style: {\n      width: '100%',\n      height: '500px',\n      borderRadius: '10px',\n      boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n};\n_s(MapComponent, \"Pp9QOx3kMIUEXbKBzUsLrHh30Ds=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["useState","useEffect","useRef","jsxDEV","_jsxDEV","MapComponent","points","initialCenter","zoom","_s","mapRef","mapInstanceRef","markersRef","mapLoaded","setMapLoaded","checkLeaflet","window","L","setTimeout","current","remove","map","setView","lat","lng","tileLayer","attribution","addTo","marker","bindPopup","openPopup","push","error","console","length","forEach","removeLayer","waypoints","point","index","name","latLng","Routing","routeControl","control","routeWhileDragging","lineOptions","styles","color","opacity","weight","createMarker","addWaypoints","draggableWaypoints","fitSelectedRoutes","bounds","latLngBounds","fitBounds","padding","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","width","height","borderRadius","boxShadow","_c","$RefreshReg$"],"sources":["C:/Users/buhil/WebstormProjects/anastasiaLab/frontend/src/components/MapComponent.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\n\r\nconst MapComponent = ({ points, initialCenter, zoom = 6 }) => {\r\n    const mapRef = useRef(null);\r\n    const mapInstanceRef = useRef(null);\r\n    const markersRef = useRef([]);\r\n    const [mapLoaded, setMapLoaded] = useState(false);\r\n\r\n    // Перевірка чи завантажена бібліотека Leaflet\r\n    useEffect(() => {\r\n        const checkLeaflet = () => {\r\n            if (window.L) {\r\n                setMapLoaded(true);\r\n            } else {\r\n                setTimeout(checkLeaflet, 100);\r\n            }\r\n        };\r\n\r\n        checkLeaflet();\r\n\r\n        return () => {\r\n            // Очищення мапи при розмонтуванні компонента\r\n            if (mapInstanceRef.current) {\r\n                mapInstanceRef.current.remove();\r\n                mapInstanceRef.current = null;\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    // Ініціалізація мапи після завантаження Leaflet\r\n    useEffect(() => {\r\n        if (!mapLoaded || !mapRef.current || mapInstanceRef.current) return;\r\n\r\n        try {\r\n            const L = window.L;\r\n\r\n            // Створюємо мапу\r\n            mapInstanceRef.current = L.map(mapRef.current).setView(\r\n                [initialCenter.lat, initialCenter.lng],\r\n                zoom\r\n            );\r\n\r\n            // Додаємо тайли OpenStreetMap\r\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n                attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n            }).addTo(mapInstanceRef.current);\r\n\r\n            // Додаємо початковий маркер для центру\r\n            const marker = L.marker([initialCenter.lat, initialCenter.lng])\r\n                .addTo(mapInstanceRef.current)\r\n                .bindPopup(\"Центр карти\")\r\n                .openPopup();\r\n\r\n            markersRef.current.push(marker);\r\n        } catch (error) {\r\n            console.error('Помилка при ініціалізації карти:', error);\r\n        }\r\n    }, [mapLoaded, initialCenter, zoom]);\r\n\r\n    // Оновлення маркерів на карті коли змінюються точки\r\n    useEffect(() => {\r\n        if (!mapLoaded || !mapInstanceRef.current || !points || points.length === 0) return;\r\n\r\n        const L = window.L;\r\n\r\n        try {\r\n            // Видаляємо всі попередні маркери\r\n            if (markersRef.current.length > 0) {\r\n                markersRef.current.forEach(marker => {\r\n                    mapInstanceRef.current.removeLayer(marker);\r\n                });\r\n                markersRef.current = [];\r\n            }\r\n\r\n            // Додаємо нові маркери\r\n            const waypoints = [];\r\n\r\n            points.forEach((point, index) => {\r\n                const marker = L.marker([point.lat, point.lng])\r\n                    .addTo(mapInstanceRef.current)\r\n                    .bindPopup(`${index + 1}. ${point.name || 'Точка'}`);\r\n\r\n                markersRef.current.push(marker);\r\n                waypoints.push(L.latLng(point.lat, point.lng));\r\n\r\n                if (index === 0) {\r\n                    marker.openPopup();\r\n                }\r\n            });\r\n\r\n            // Якщо є більше одного маркера, створюємо маршрут між ними\r\n            if (waypoints.length > 1 && window.L.Routing) {\r\n                const routeControl = L.Routing.control({\r\n                    waypoints: waypoints,\r\n                    routeWhileDragging: false,\r\n                    lineOptions: {\r\n                        styles: [{ color: '#223440', opacity: 0.7, weight: 5 }]\r\n                    },\r\n                    createMarker: () => null, // Не створюємо додаткові маркери\r\n                    addWaypoints: false,\r\n                    draggableWaypoints: false,\r\n                    fitSelectedRoutes: false\r\n                }).addTo(mapInstanceRef.current);\r\n            }\r\n\r\n            // Визначаємо межі для автоматичного масштабування\r\n            const bounds = L.latLngBounds(waypoints);\r\n            mapInstanceRef.current.fitBounds(bounds, { padding: [50, 50] });\r\n        } catch (error) {\r\n            console.error('Помилка при оновленні маркерів:', error);\r\n        }\r\n    }, [points, mapLoaded]);\r\n\r\n    if (!mapLoaded) {\r\n        return <div className=\"map-loading\">Завантаження карти...</div>;\r\n    }\r\n\r\n    return (\r\n        <div\r\n            ref={mapRef}\r\n            style={{\r\n                width: '100%',\r\n                height: '500px',\r\n                borderRadius: '10px',\r\n                boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}